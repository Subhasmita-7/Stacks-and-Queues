Input: heights = [2,1,5,6,2,3]
Output: 10
Explanation: The above is a histogram where width of each bar is 1.
The largest rectangle is shown in the red area, which has an area = 10 units.
https://www.geeksforgeeks.org/dsa/largest-rectangular-area-in-a-histogram-using-stack/


class Solution {
    public int largestRectangleArea(int[] heights) {
        int n = heights.length;
        int ans = 0;
        int curr;
        int left;
        Stack<Integer> st = new Stack<>();
        for(int i = 0; i< n ; i++){
            while(!st.isEmpty() && heights[st.peek()] > heights[i]){
                left = st.pop();
                int width = st.isEmpty() ? i : i - st.peek() - 1;
                ans = Math.max(ans, heights[left]*width);
            }
            st.push(i);
        }

        while(!st.isEmpty()){
            left = st.pop();
            curr = heights[left] * (st.isEmpty() ? n : n - st.peek() - 1);
            ans = Math.max(ans,curr);
        }
        return ans;
    }
    
}
